name: CI‑CD–Test, Build & Deploy to Azure

on:
  push:
    branches: [master]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      web: ${{ steps.filter.outputs.web }}
    steps:
      - uses: actions/checkout@v3
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            api:
              - 'project/src/api/**'
            web:
              - 'project/src/frontend/**'

  test:
    runs-on: ubuntu-latest
    needs: detect-changes
    steps:
      - uses: actions/checkout@v3
      - name: Install docker-compose
        run: |
          curl -SL https://github.com/docker/compose/releases/download/v2.24.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose version
      - name: Run tests
        run: |
          WANDB_API_KEY="${{ secrets.WANDB_API_KEY }}" \
          WANDB_ARTIFACT_PATH="${{ vars.WANDB_ARTIFACT_PATH }}" \
          docker-compose -f ./project/src/docker-compose.yml up --abort-on-container-exit test

  # ‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑ BUILD API ‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑
  build-api:
    runs-on: ubuntu-latest
    needs: [test, detect-changes]
    if: ${{ needs.detect-changes.outputs.api == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Docker login
        run: az acr login --name ${{ vars.AZURE_ACR_NAME }}
      - name: Build & push API image
        run: |
          docker build -t ${{ vars.AZURE_ACR_NAME }}.azurecr.io/house-price-mlops:ci ./project/src/api
          docker push ${{ vars.AZURE_ACR_NAME }}.azurecr.io/house-price-mlops:ci

  # ‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑ BUILD WEB ‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑
  build-web:
    runs-on: ubuntu-latest
    needs: [test, detect-changes]
    if: ${{ needs.detect-changes.outputs.web == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Docker login
        run: az acr login --name ${{ vars.AZURE_ACR_NAME }}
      - name: Build & push Web image
        run: |
          docker build -t ${{ vars.AZURE_ACR_NAME }}.azurecr.io/web-house-price-mlops:ci ./project/src/frontend
          docker push ${{ vars.AZURE_ACR_NAME }}.azurecr.io/web-house-price-mlops:ci

  # ‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑ DEPLOY ‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑‑
  deploy:
    runs-on: ubuntu-latest
    needs: [build-api, build-web]
    if: ${{ always() && (needs.build-api.result == 'success' || needs.build-web.result == 'success') }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with: 
            creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Prepare docker‑compose.prod.yml
        run: |
          cd project/src
          cp docker-compose.prod.yml docker-compose.yml
          zip deploy.zip docker-compose.yml
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          package: ./project/src/deploy.zip